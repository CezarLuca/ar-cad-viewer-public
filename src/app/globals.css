@import "tailwindcss";
@import url("https://fonts.googleapis.com/css2?family=Mona+Sans:ital,wght@0,200..900;1,200..900&display=swap");

@theme {
    --font-sans: var(--font-geist-sans);
    --font-mono: var(--font-geist-mono);
}

:root {
    --background: #ffffff;
    --foreground: #171717;
    --gradient: radial-gradient(circle, #e5e5e5 0%, #fff 100%);
}

@media (prefers-color-scheme: dark) {
    :root {
        --background: #0a0a0a;
        --foreground: #ededed;
    }
}
@layer utilities {
    .rotate-60 {
        transform: rotate(60deg);
    }
    .-rotate-60 {
        transform: rotate(-60deg);
    }
    .rotate-120 {
        transform: rotate(120deg);
    }
    .rotate-180 {
        transform: rotate(180deg);
    }
    .rotate-240 {
        transform: rotate(240deg);
    }
    .flex-center {
        @apply flex justify-center items-center;
    }
    .flex-col-center {
        @apply flex flex-col justify-center items-center;
    }
    .transition-smooth {
        @apply transition-all duration-200 ease-in-out;
    }
}

body {
    width: 100dvw;
    overflow-x: hidden;
    color: var(--foreground);
    background: var(--background);
    scroll-behavior: smooth;
    font-family: "Mona Sans", sans-serif;
}

/* Fix canvas overflow
canvas {
    touch-action: none;
    outline: none;
    width: 100% !important;
    height: 100% !important;
    display: block !important;
} */

.threejs-html-container {
    transform-style: preserve-3d;
}

.threejs-html-container button {
    cursor: pointer;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
}

/* Optional shadow to help with visibility */
.threejs-html-container > div {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Sliding Words for home page */

.slide {
    display: inline-block;
    /* Add height matching one line item */
    height: 1.2em; /* Adjust this value based on your font size and line height */
    /* Add overflow hidden to clip the other words */
    overflow: hidden;
    /* Optional: Adjust vertical alignment if needed */
    vertical-align: bottom;
    /* transition: all cubic-bezier(0.71, 0.03, 0.34, 1); */ /* Transition likely not needed here */
}

.wrapper {
    display: block; /* Can be block or flex */
    /* flex-direction: column; */ /* Only needed if display: flex */
    animation: wordSlider 12s infinite cubic-bezier(0.9, 0.01, 0.3, 0.99);
}

/* Ensure child spans have consistent height for smooth animation */
.wrapper > span {
    height: 1.2em; /* Match the height of .slide */
    /* display: flex and other utilities are applied via className in the component */
}

@keyframes wordSlider {
    /* Adjust percentages based on the number of words (4 words) */
    /* Each step should move up by the height of one item (100% / 4 items = 25% of total wrapper height) */
    0%,
    20% {
        transform: translateY(0%);
    } /* Word 1 */
    25%,
    45% {
        transform: translateY(-25%);
    } /* Word 2 */
    50%,
    70% {
        transform: translateY(-50%);
    } /* Word 3 */
    75%,
    95% {
        transform: translateY(-75%);
    } /* Word 4 */
    100% {
        transform: translateY(0%);
    } /* Loop back */
}
